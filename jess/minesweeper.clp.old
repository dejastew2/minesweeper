(defrule test
   (declare (salience 10000))
   
   (MinefieldVariables
      (mineSquaresKnown ?mineSquaresKnown)
      (numberMines ?numberMines)
      (mineHeight ?mineHeight)
      (mineWidth ?mineWidth)
   )
=>
   (printout t ", ?numberMines: " ?numberMines
               ", ?mineHeight: " ?mineHeight
               ", ?mineWidth: " ?mineWidth crlf)
)

;MineSweeper Version 1.0
;Copyright (C) 2004, Hafeez Jaffer
;
;This program is free software; you can redistribute it and/or
;modify it under the terms of the GNU General Public License
;as published by the Free Software Foundation; either version 2
;of the License, or any later version.
;
;This program is distributed in the hope that it will be useful,
;but WITHOUT ANY WARRANTY; without even the implied warranty of
;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;GNU General Public License for more details.
;
;You should have received a copy of the GNU General Public License
;along with this program; if not, write to the Free Software
;Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

; <<<  DEFGLOBALS  >>>
; EMPTY_SQUARE (=0)
; FLAGGED_MINE (=-2)
; UNKNOWN      (=-4)
; <<<  DEFGLOBALS  >>>

; <<<  DEFTEMPLATES  >>>
;   (MineSquare
;      (slot id) - integer
;      (slot row) - integer
;      (slot col) - integer
;      (slot status ?status) - integer
;      (multislot surroundingUnknowns) - integer list
;      (slot numSurroundingFlags) - integer
;   )
;
;   (MinefieldVariables
;      (slot numberMines) - integer
;      (slot mineHeight) - integer
;      (slot mineWidth) - integer
;   )
;
; <<<  DEFTEMPLATES  >>>

; Hooks to GUI:
;    (reveal-square ?id)
;    (flag-square ?id)

; pass in a multifield of MineSquares (id's) and
;  this function will mark each MineSquare as a mine
(deffunction flagAllSurroundingUnknowns ($?surrUnknowns)
)

; pass in a multifield of MineSquares (id's) and
;  this function will reveal each MineSquare;
(deffunction revealAllSurroundingUnknowns ($?surrUnknowns)
)

; here is a test rule.
; find a minesquare that's a 1 and reveal the square to the right of it.
; this also prints the minefieldvariables deftemplate values
(defrule test
   (MineSquare
      (id ?id1)
      (row ?row1)
      (col ?col1)
      (status 1)
      (surroundingUnknowns $?surrUn1)
      (numSurroundingFlags $?numSurrFlags)
   )
   (MinefieldVariables
      (mineSquaresKnown ?mineSquaresKnown)
      (numberMines ?numberMines)
      (mineHeight ?mineHeight)
      (mineWidth ?mineWidth)
   )

=>
    (printout t "?numberMines: " ?numberMines
                ", ?mineHeight: " ?mineHeight
                ", ?mineWidth: " ?mineWidth crlf)
    (reveal-square (+ 1 ?id1))
)